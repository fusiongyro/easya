# Copyright (c) 2012, Daniel Lyons
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without modification, are permitted
# provided that the following conditions are met:
# 
# Redistributions of source code must retain the above copyright notice, this list of conditions
# and the following disclaimer.
# 
# Redistributions in binary form must reproduce the above copyright notice, this list of
# conditions and the following disclaimer in the documentation and/or other materials provided with
# the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
# IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
# OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 

[main]
dataSource = org.apache.shiro.jndi.JndiObjectFactory
dataSource.resourceName = jdbc/easya

passwordMatcher = org.apache.shiro.authc.credential.TempFixPasswordMatcher
#passwordService = org.apache.shiro.authc.credential.HashingPasswordService
passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
#passwordService.hashIterations = 1024
passwordMatcher.passwordService = $passwordService

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.credentialsMatcher = $passwordMatcher
jdbcRealm.dataSource=$dataSource

jdbcRealm.authenticationQuery = SELECT password        FROM users             WHERE username = ?
jdbcRealm.userRolesQuery      = SELECT role_name       FROM users_roles       WHERE username = ?
jdbcRealm.permissionsQuery    = SELECT permission_name FROM roles_permissions WHERE role_name = ?

securityManager.realms = $jdbcRealm

#[users]
#admin = foobar, admin
#instructor = foobar, instructor
#grader = foobar, grader
#student = foobar, student
#
#[roles]
#admin = *